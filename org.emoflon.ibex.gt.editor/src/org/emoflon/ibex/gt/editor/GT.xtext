grammar org.emoflon.ibex.gt.editor.GT
with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate gT "http://www.emoflon.org/ibex/gt/editor/GT"

GraphTransformationFile:
	(imports+=Import)*
	(rules+=Rule)*
;

Import:
	'import' name=STRING
;

Rule:
	(abstract?='abstract')? 'rule' name=ID
	('refines' superRules+=[Rule] (',' superRules+=[Rule])*)?
	('('
		(parameters+=Parameter (',' parameters+=Parameter)*)?
	')')?
	('{'
		(nodes+=Node)*
	'}')?
	(nacs+=NAC)*
;

Parameter:
	name=ID ':' type=ID
;

// Nodes
Node:
	bindingType=BindingType?
	name=ID ':' type=[ecore::EClass]
	('{'
		constraints+=InnerNodeConstraint*
	'}')?
;

enum BindingType:
	CONTEXT 
	| CREATE = '++'
	| DELETE = '--'
;

InnerNodeConstraint:
	AttributeAssignment | AttributeCondition | Reference
;

// Attribute Assignments and Conditions
AttributeAssignment:
	attribute=[ecore::EAttribute] '=' value=Expression
;

AttributeCondition:
	attribute=[ecore::EAttribute] operator=('==' | '!=' | '<=' | '>=' | '>' | '<') value=Expression
;

Expression:
	{BooleanConstant} value=('true'| 'false') |
	{NumberConstant} value=NumericExpression |
	{StringConstant} value=STRING | 
	{Variable} value=ID
;

terminal DECIMAL: INT '.' INT;

NumericExpression:
	(('-')?INT | ('-')?DECIMAL)
;

// References
Reference:
	bindingType=BindingType?
	type=[ecore::EReference] '->' target=[Node]
;

// Negative Application Conditions
NAC:
	'nac' name=ID '{'
		(nodes+=Node)*
	'}'
;
